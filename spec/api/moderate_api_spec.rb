=begin
#Moderation API

#API for automated content moderation

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ModerationAPI::ModerateApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ModerateApi' do
  before do
    # run before each test
    @api_instance = ModerationAPI::ModerateApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ModerateApi' do
    it 'should create an instance of ModerateApi' do
      expect(@api_instance).to be_instance_of(ModerationAPI::ModerateApi)
    end
  end

  # unit tests for moderation_audio
  # Analyze audio
  # Analyze audio with your Moderation API project
  # @param moderation_audio_request 
  # @param [Hash] opts the optional parameters
  # @return [ModerationVideo200Response]
  describe 'moderation_audio test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for moderation_image
  # Analyze image
  # Analyze image with your Moderation API project
  # @param moderation_image_request 
  # @param [Hash] opts the optional parameters
  # @return [ModerationImage200Response]
  describe 'moderation_image test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for moderation_object
  # Analyze object.
  # Analyze an object with multiple fields including text, images, video, audio. Use to moderate a post, a profile, a form submission or anything that have multiple fields.
  # @param moderation_object_request 
  # @param [Hash] opts the optional parameters
  # @return [ModerationObject200Response]
  describe 'moderation_object test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for moderation_text
  # Analyze text.
  # Analyze text with your Moderation API project.
  # @param moderation_text_request 
  # @param [Hash] opts the optional parameters
  # @return [ModerationText200Response]
  describe 'moderation_text test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for moderation_video
  # Analyze video
  # Analyze video with your Moderation API project
  # @param moderation_video_request 
  # @param [Hash] opts the optional parameters
  # @return [ModerationVideo200Response]
  describe 'moderation_video test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
